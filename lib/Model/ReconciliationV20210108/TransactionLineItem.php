<?php
/**
 * TransactionLineItem
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  AmazonBusinessApi
 */

/**
 * Amazon Business API for Payment Reconciliation
 *
 * With the Amazon Business API for Payment Reconciliation, you can build applications that help Amazon Business customers get purchase-related information for reconciling business transactions.
 *
 * The version of the OpenAPI document: 2021-01-08
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace AmazonBusinessApi\Model\ReconciliationV20210108;

use \AmazonBusinessApi\Model\ModelInterface;
use \AmazonBusinessApi\ObjectSerializer;
use \ArrayAccess;

/**
 * TransactionLineItem Class Doc Comment
 *
 * @category Class
 * @description A transaction line item.
 * @package  AmazonBusinessApi
 * @group 
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class TransactionLineItem implements ModelInterface, ArrayAccess, \JsonSerializable, \IteratorAggregate
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'TransactionLineItem';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'refund_reason' => 'string',
        'total_amount' => '\AmazonBusinessApi\Model\ReconciliationV20210108\Money',
        'principal_amount' => '\AmazonBusinessApi\Model\ReconciliationV20210108\Money',
        'shipping_charge' => '\AmazonBusinessApi\Model\ReconciliationV20210108\Money',
        'regulatory_fee' => '\AmazonBusinessApi\Model\ReconciliationV20210108\Money',
        'gift_wrapping_charge' => '\AmazonBusinessApi\Model\ReconciliationV20210108\Money',
        'discount' => '\AmazonBusinessApi\Model\ReconciliationV20210108\Money',
        'tax' => '\AmazonBusinessApi\Model\ReconciliationV20210108\Money',
        'unit_price' => '\AmazonBusinessApi\Model\ReconciliationV20210108\Money',
        'tax_rate' => 'string',
        'order_id' => 'string',
        'unspsc' => 'string',
        'order_line_item_id' => 'string',
        'purchase_order_number' => 'string',
        'purchase_order_line_item_id' => 'string',
        'asin' => 'string',
        'product_title' => 'string',
        'item_quantity' => 'int',
        'shipment_id' => 'string',
        'shipment_date' => 'string',
        'merchant_legal_name' => 'string',
        'budget_id' => 'string',
        'business_order_info' => 'map[string,string]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'refund_reason' => null,
        'total_amount' => null,
        'principal_amount' => null,
        'shipping_charge' => null,
        'regulatory_fee' => null,
        'gift_wrapping_charge' => null,
        'discount' => null,
        'tax' => null,
        'unit_price' => null,
        'tax_rate' => null,
        'order_id' => null,
        'unspsc' => null,
        'order_line_item_id' => null,
        'purchase_order_number' => null,
        'purchase_order_line_item_id' => null,
        'asin' => null,
        'product_title' => null,
        'item_quantity' => null,
        'shipment_id' => null,
        'shipment_date' => null,
        'merchant_legal_name' => null,
        'budget_id' => null,
        'business_order_info' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'refund_reason' => 'refundReason',
        'total_amount' => 'totalAmount',
        'principal_amount' => 'principalAmount',
        'shipping_charge' => 'shippingCharge',
        'regulatory_fee' => 'regulatoryFee',
        'gift_wrapping_charge' => 'giftWrappingCharge',
        'discount' => 'discount',
        'tax' => 'tax',
        'unit_price' => 'unitPrice',
        'tax_rate' => 'taxRate',
        'order_id' => 'orderId',
        'unspsc' => 'unspsc',
        'order_line_item_id' => 'orderLineItemId',
        'purchase_order_number' => 'purchaseOrderNumber',
        'purchase_order_line_item_id' => 'purchaseOrderLineItemId',
        'asin' => 'asin',
        'product_title' => 'productTitle',
        'item_quantity' => 'itemQuantity',
        'shipment_id' => 'shipmentId',
        'shipment_date' => 'shipmentDate',
        'merchant_legal_name' => 'merchantLegalName',
        'budget_id' => 'budgetId',
        'business_order_info' => 'businessOrderInfo'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
                'refund_reason' => 'setRefundReason',
        'total_amount' => 'setTotalAmount',
        'principal_amount' => 'setPrincipalAmount',
        'shipping_charge' => 'setShippingCharge',
        'regulatory_fee' => 'setRegulatoryFee',
        'gift_wrapping_charge' => 'setGiftWrappingCharge',
        'discount' => 'setDiscount',
        'tax' => 'setTax',
        'unit_price' => 'setUnitPrice',
        'tax_rate' => 'setTaxRate',
        'order_id' => 'setOrderId',
        'unspsc' => 'setUnspsc',
        'order_line_item_id' => 'setOrderLineItemId',
        'purchase_order_number' => 'setPurchaseOrderNumber',
        'purchase_order_line_item_id' => 'setPurchaseOrderLineItemId',
        'asin' => 'setAsin',
        'product_title' => 'setProductTitle',
        'item_quantity' => 'setItemQuantity',
        'shipment_id' => 'setShipmentId',
        'shipment_date' => 'setShipmentDate',
        'merchant_legal_name' => 'setMerchantLegalName',
        'budget_id' => 'setBudgetId',
        'business_order_info' => 'setBusinessOrderInfo'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'refund_reason' => 'getRefundReason',
        'total_amount' => 'getTotalAmount',
        'principal_amount' => 'getPrincipalAmount',
        'shipping_charge' => 'getShippingCharge',
        'regulatory_fee' => 'getRegulatoryFee',
        'gift_wrapping_charge' => 'getGiftWrappingCharge',
        'discount' => 'getDiscount',
        'tax' => 'getTax',
        'unit_price' => 'getUnitPrice',
        'tax_rate' => 'getTaxRate',
        'order_id' => 'getOrderId',
        'unspsc' => 'getUnspsc',
        'order_line_item_id' => 'getOrderLineItemId',
        'purchase_order_number' => 'getPurchaseOrderNumber',
        'purchase_order_line_item_id' => 'getPurchaseOrderLineItemId',
        'asin' => 'getAsin',
        'product_title' => 'getProductTitle',
        'item_quantity' => 'getItemQuantity',
        'shipment_id' => 'getShipmentId',
        'shipment_date' => 'getShipmentDate',
        'merchant_legal_name' => 'getMerchantLegalName',
        'budget_id' => 'getBudgetId',
        'business_order_info' => 'getBusinessOrderInfo'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }
    
    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['refund_reason'] = $data['refund_reason'] ?? null;
        $this->container['total_amount'] = $data['total_amount'] ?? null;
        $this->container['principal_amount'] = $data['principal_amount'] ?? null;
        $this->container['shipping_charge'] = $data['shipping_charge'] ?? null;
        $this->container['regulatory_fee'] = $data['regulatory_fee'] ?? null;
        $this->container['gift_wrapping_charge'] = $data['gift_wrapping_charge'] ?? null;
        $this->container['discount'] = $data['discount'] ?? null;
        $this->container['tax'] = $data['tax'] ?? null;
        $this->container['unit_price'] = $data['unit_price'] ?? null;
        $this->container['tax_rate'] = $data['tax_rate'] ?? null;
        $this->container['order_id'] = $data['order_id'] ?? null;
        $this->container['unspsc'] = $data['unspsc'] ?? null;
        $this->container['order_line_item_id'] = $data['order_line_item_id'] ?? null;
        $this->container['purchase_order_number'] = $data['purchase_order_number'] ?? null;
        $this->container['purchase_order_line_item_id'] = $data['purchase_order_line_item_id'] ?? null;
        $this->container['asin'] = $data['asin'] ?? null;
        $this->container['product_title'] = $data['product_title'] ?? null;
        $this->container['item_quantity'] = $data['item_quantity'] ?? null;
        $this->container['shipment_id'] = $data['shipment_id'] ?? null;
        $this->container['shipment_date'] = $data['shipment_date'] ?? null;
        $this->container['merchant_legal_name'] = $data['merchant_legal_name'] ?? null;
        $this->container['budget_id'] = $data['budget_id'] ?? null;
        $this->container['business_order_info'] = $data['business_order_info'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets refund_reason
     *
     * @return string|null
     */
    public function getRefundReason()
    {
        return $this->container['refund_reason'];
    }

    /**
     * Sets refund_reason
     *
     * @param string|null $refund_reason The reason why a refund was issued.
     *
     * @return self
     */
    public function setRefundReason($refund_reason)
    {
        $this->container['refund_reason'] = $refund_reason;

        return $this;
    }
    /**
     * Gets total_amount
     *
     * @return \AmazonBusinessApi\Model\ReconciliationV20210108\Money|null
     */
    public function getTotalAmount()
    {
        return $this->container['total_amount'];
    }

    /**
     * Sets total_amount
     *
     * @param \AmazonBusinessApi\Model\ReconciliationV20210108\Money|null $total_amount total_amount
     *
     * @return self
     */
    public function setTotalAmount($total_amount)
    {
        $this->container['total_amount'] = $total_amount;

        return $this;
    }
    /**
     * Gets principal_amount
     *
     * @return \AmazonBusinessApi\Model\ReconciliationV20210108\Money|null
     */
    public function getPrincipalAmount()
    {
        return $this->container['principal_amount'];
    }

    /**
     * Sets principal_amount
     *
     * @param \AmazonBusinessApi\Model\ReconciliationV20210108\Money|null $principal_amount principal_amount
     *
     * @return self
     */
    public function setPrincipalAmount($principal_amount)
    {
        $this->container['principal_amount'] = $principal_amount;

        return $this;
    }
    /**
     * Gets shipping_charge
     *
     * @return \AmazonBusinessApi\Model\ReconciliationV20210108\Money|null
     */
    public function getShippingCharge()
    {
        return $this->container['shipping_charge'];
    }

    /**
     * Sets shipping_charge
     *
     * @param \AmazonBusinessApi\Model\ReconciliationV20210108\Money|null $shipping_charge shipping_charge
     *
     * @return self
     */
    public function setShippingCharge($shipping_charge)
    {
        $this->container['shipping_charge'] = $shipping_charge;

        return $this;
    }
    /**
     * Gets regulatory_fee
     *
     * @return \AmazonBusinessApi\Model\ReconciliationV20210108\Money|null
     */
    public function getRegulatoryFee()
    {
        return $this->container['regulatory_fee'];
    }

    /**
     * Sets regulatory_fee
     *
     * @param \AmazonBusinessApi\Model\ReconciliationV20210108\Money|null $regulatory_fee regulatory_fee
     *
     * @return self
     */
    public function setRegulatoryFee($regulatory_fee)
    {
        $this->container['regulatory_fee'] = $regulatory_fee;

        return $this;
    }
    /**
     * Gets gift_wrapping_charge
     *
     * @return \AmazonBusinessApi\Model\ReconciliationV20210108\Money|null
     */
    public function getGiftWrappingCharge()
    {
        return $this->container['gift_wrapping_charge'];
    }

    /**
     * Sets gift_wrapping_charge
     *
     * @param \AmazonBusinessApi\Model\ReconciliationV20210108\Money|null $gift_wrapping_charge gift_wrapping_charge
     *
     * @return self
     */
    public function setGiftWrappingCharge($gift_wrapping_charge)
    {
        $this->container['gift_wrapping_charge'] = $gift_wrapping_charge;

        return $this;
    }
    /**
     * Gets discount
     *
     * @return \AmazonBusinessApi\Model\ReconciliationV20210108\Money|null
     */
    public function getDiscount()
    {
        return $this->container['discount'];
    }

    /**
     * Sets discount
     *
     * @param \AmazonBusinessApi\Model\ReconciliationV20210108\Money|null $discount discount
     *
     * @return self
     */
    public function setDiscount($discount)
    {
        $this->container['discount'] = $discount;

        return $this;
    }
    /**
     * Gets tax
     *
     * @return \AmazonBusinessApi\Model\ReconciliationV20210108\Money|null
     */
    public function getTax()
    {
        return $this->container['tax'];
    }

    /**
     * Sets tax
     *
     * @param \AmazonBusinessApi\Model\ReconciliationV20210108\Money|null $tax tax
     *
     * @return self
     */
    public function setTax($tax)
    {
        $this->container['tax'] = $tax;

        return $this;
    }
    /**
     * Gets unit_price
     *
     * @return \AmazonBusinessApi\Model\ReconciliationV20210108\Money|null
     */
    public function getUnitPrice()
    {
        return $this->container['unit_price'];
    }

    /**
     * Sets unit_price
     *
     * @param \AmazonBusinessApi\Model\ReconciliationV20210108\Money|null $unit_price unit_price
     *
     * @return self
     */
    public function setUnitPrice($unit_price)
    {
        $this->container['unit_price'] = $unit_price;

        return $this;
    }
    /**
     * Gets tax_rate
     *
     * @return string|null
     */
    public function getTaxRate()
    {
        return $this->container['tax_rate'];
    }

    /**
     * Sets tax_rate
     *
     * @param string|null $tax_rate The tax rate associated with item.
     *
     * @return self
     */
    public function setTaxRate($tax_rate)
    {
        $this->container['tax_rate'] = $tax_rate;

        return $this;
    }
    /**
     * Gets order_id
     *
     * @return string|null
     */
    public function getOrderId()
    {
        return $this->container['order_id'];
    }

    /**
     * Sets order_id
     *
     * @param string|null $order_id The Amazon order identifier associated with the item.
     *
     * @return self
     */
    public function setOrderId($order_id)
    {
        $this->container['order_id'] = $order_id;

        return $this;
    }
    /**
     * Gets unspsc
     *
     * @return string|null
     */
    public function getUnspsc()
    {
        return $this->container['unspsc'];
    }

    /**
     * Sets unspsc
     *
     * @param string|null $unspsc United Nations Standard Products and Services Code for the item.
     *
     * @return self
     */
    public function setUnspsc($unspsc)
    {
        $this->container['unspsc'] = $unspsc;

        return $this;
    }
    /**
     * Gets order_line_item_id
     *
     * @return string|null
     */
    public function getOrderLineItemId()
    {
        return $this->container['order_line_item_id'];
    }

    /**
     * Sets order_line_item_id
     *
     * @param string|null $order_line_item_id The order line item identifier for the item. This identifier is created by Amazon
     *
     * @return self
     */
    public function setOrderLineItemId($order_line_item_id)
    {
        $this->container['order_line_item_id'] = $order_line_item_id;

        return $this;
    }
    /**
     * Gets purchase_order_number
     *
     * @return string|null
     */
    public function getPurchaseOrderNumber()
    {
        return $this->container['purchase_order_number'];
    }

    /**
     * Sets purchase_order_number
     *
     * @param string|null $purchase_order_number The purchase order number associated with the item of a PPI order. This number is created by the buyer.
     *
     * @return self
     */
    public function setPurchaseOrderNumber($purchase_order_number)
    {
        $this->container['purchase_order_number'] = $purchase_order_number;

        return $this;
    }
    /**
     * Gets purchase_order_line_item_id
     *
     * @return string|null
     */
    public function getPurchaseOrderLineItemId()
    {
        return $this->container['purchase_order_line_item_id'];
    }

    /**
     * Sets purchase_order_line_item_id
     *
     * @param string|null $purchase_order_line_item_id The purchase order line item identifier associated with the item. This identifier is created by the buyer.
     *
     * @return self
     */
    public function setPurchaseOrderLineItemId($purchase_order_line_item_id)
    {
        $this->container['purchase_order_line_item_id'] = $purchase_order_line_item_id;

        return $this;
    }
    /**
     * Gets asin
     *
     * @return string|null
     */
    public function getAsin()
    {
        return $this->container['asin'];
    }

    /**
     * Sets asin
     *
     * @param string|null $asin The Amazon Standard Identification Number (ASIN) for the item.
     *
     * @return self
     */
    public function setAsin($asin)
    {
        $this->container['asin'] = $asin;

        return $this;
    }
    /**
     * Gets product_title
     *
     * @return string|null
     */
    public function getProductTitle()
    {
        return $this->container['product_title'];
    }

    /**
     * Sets product_title
     *
     * @param string|null $product_title The title of the item.
     *
     * @return self
     */
    public function setProductTitle($product_title)
    {
        $this->container['product_title'] = $product_title;

        return $this;
    }
    /**
     * Gets item_quantity
     *
     * @return int|null
     */
    public function getItemQuantity()
    {
        return $this->container['item_quantity'];
    }

    /**
     * Sets item_quantity
     *
     * @param int|null $item_quantity The item quantity relevant to this transaction.
     *
     * @return self
     */
    public function setItemQuantity($item_quantity)
    {
        $this->container['item_quantity'] = $item_quantity;

        return $this;
    }
    /**
     * Gets shipment_id
     *
     * @return string|null
     */
    public function getShipmentId()
    {
        return $this->container['shipment_id'];
    }

    /**
     * Sets shipment_id
     *
     * @param string|null $shipment_id The identifier of the shipment associated with the item. This identifier is created by Amazon.
     *
     * @return self
     */
    public function setShipmentId($shipment_id)
    {
        $this->container['shipment_id'] = $shipment_id;

        return $this;
    }
    /**
     * Gets shipment_date
     *
     * @return string|null
     */
    public function getShipmentDate()
    {
        return $this->container['shipment_date'];
    }

    /**
     * Sets shipment_date
     *
     * @param string|null $shipment_date The shipment date associated with the item.
     *
     * @return self
     */
    public function setShipmentDate($shipment_date)
    {
        $this->container['shipment_date'] = $shipment_date;

        return $this;
    }
    /**
     * Gets merchant_legal_name
     *
     * @return string|null
     */
    public function getMerchantLegalName()
    {
        return $this->container['merchant_legal_name'];
    }

    /**
     * Sets merchant_legal_name
     *
     * @param string|null $merchant_legal_name The legal name of the seller.
     *
     * @return self
     */
    public function setMerchantLegalName($merchant_legal_name)
    {
        $this->container['merchant_legal_name'] = $merchant_legal_name;

        return $this;
    }
    /**
     * Gets budget_id
     *
     * @return string|null
     */
    public function getBudgetId()
    {
        return $this->container['budget_id'];
    }

    /**
     * Sets budget_id
     *
     * @param string|null $budget_id The budget identifier associated with the item.
     *
     * @return self
     */
    public function setBudgetId($budget_id)
    {
        $this->container['budget_id'] = $budget_id;

        return $this;
    }
    /**
     * Gets business_order_info
     *
     * @return map[string,string]|null
     */
    public function getBusinessOrderInfo()
    {
        return $this->container['business_order_info'];
    }

    /**
     * Sets business_order_info
     *
     * @param map[string,string]|null $business_order_info Additional order information configured by administrators that requisitioners must enter at checkout.
     *
     * @return self
     */
    public function setBusinessOrderInfo($business_order_info)
    {
        $this->container['business_order_info'] = $business_order_info;

        return $this;
    }

    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }

    /**
     * Enable iterating over all of the model's attributes in $key => $value format
     *
     * @return \Traversable
     */
    public function getIterator(): \Traversable
    {
        return (function () {
            foreach ($this->container as $key => $value) {
                yield $key => $value;
            }
        })();
    }

    /**
     * Retrieves the property with the given name by converting the property accession
     * to a getter call.
     *
     * @param string $propertyName
     * @return mixed
     */
    public function __get($propertyName)
    {
        // This doesn't make a syntactical difference since PHP is case-insensitive, but
        // makes error messages clearer (e.g. "Call to undefined method getFoo()" rather
        // than "Call to undefined method getfoo()").
        $ucProp = ucfirst($propertyName);
        $getter = "get$ucProp";
        return $this->$getter();
    }

    /**
     * Sets the property with the given name by converting the property accession
     * to a setter call.
     *
     * @param string $propertyName
     * @param mixed $propertyValue
     * @return AmazonBusinessApi\Model\ReconciliationV20210108\TransactionLineItem
     */
    public function __set($propertyName, $propertyValue)
    {
        $ucProp = ucfirst($propertyName);
        $setter = "set$ucProp";
        $this->$setter($propertyValue);
        return $this;
    }
}


