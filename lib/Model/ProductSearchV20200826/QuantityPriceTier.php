<?php
/**
 * QuantityPriceTier
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  AmazonBusinessApi
 */

/**
 * Amazon Business API for Products
 *
 * An API for getting data about products available to Amazon Business customers. This includes information such as the product title, the merchant selling the product, and the current price.
 *
 * The version of the OpenAPI document: 2020-08-26
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace AmazonBusinessApi\Model\ProductSearchV20200826;
use AmazonBusinessApi\Model\BaseModel;
use AmazonBusinessApi\Model\ModelInterface;
use AmazonBusinessApi\ObjectSerializer;
use ArrayAccess;

/**
 * QuantityPriceTier Class Doc Comment
 *
 * @category Class
 * @description Quantity Price tier defines the price for items if the quantity being purchased falls within the quantities specified in quantityDisplay field.
 * @package  AmazonBusinessApi
 * @group 
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class QuantityPriceTier extends BaseModel implements ModelInterface, ArrayAccess, \JsonSerializable, \IteratorAggregate
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'QuantityPriceTier';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'quantity_display' => 'string',
        'unit_price' => '\AmazonBusinessApi\Model\ProductSearchV20200826\Money',
        'min_quantity' => 'int',
        'price' => '\AmazonBusinessApi\Model\ProductSearchV20200826\Price',
        'saving_message' => 'string',
        'tax_exclusive_price' => '\AmazonBusinessApi\Model\ProductSearchV20200826\TaxExclusivePrice'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'quantity_display' => null,
        'unit_price' => null,
        'min_quantity' => 'int64',
        'price' => null,
        'saving_message' => null,
        'tax_exclusive_price' => null
    ];



    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'quantity_display' => 'quantityDisplay',
        'unit_price' => 'unitPrice',
        'min_quantity' => 'minQuantity',
        'price' => 'price',
        'saving_message' => 'savingMessage',
        'tax_exclusive_price' => 'taxExclusivePrice'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
                'quantity_display' => 'setQuantityDisplay',
        'unit_price' => 'setUnitPrice',
        'min_quantity' => 'setMinQuantity',
        'price' => 'setPrice',
        'saving_message' => 'setSavingMessage',
        'tax_exclusive_price' => 'setTaxExclusivePrice'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'quantity_display' => 'getQuantityDisplay',
        'unit_price' => 'getUnitPrice',
        'min_quantity' => 'getMinQuantity',
        'price' => 'getPrice',
        'saving_message' => 'getSavingMessage',
        'tax_exclusive_price' => 'getTaxExclusivePrice'
    ];


    
    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['quantity_display'] = $data['quantity_display'] ?? null;
        $this->container['unit_price'] = $data['unit_price'] ?? null;
        $this->container['min_quantity'] = $data['min_quantity'] ?? null;
        $this->container['price'] = $data['price'] ?? null;
        $this->container['saving_message'] = $data['saving_message'] ?? null;
        $this->container['tax_exclusive_price'] = $data['tax_exclusive_price'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];
        if ($this->container['quantity_display'] === null) {
            $invalidProperties[] = "'quantity_display' can't be null";
        }
        if ($this->container['unit_price'] === null) {
            $invalidProperties[] = "'unit_price' can't be null";
        }
        return $invalidProperties;
    }


    /**
     * Gets quantity_display
     *
     * @return string
     */
    public function getQuantityDisplay()
    {
        return $this->container['quantity_display'];
    }

    /**
     * Sets quantity_display
     *
     * @param string $quantity_display A localized string indicating the quantity range for which the price in the tier applies.
     *
     * @return self
     */
    public function setQuantityDisplay($quantity_display)
    {
        $this->container['quantity_display'] = $quantity_display;

        return $this;
    }
    /**
     * Gets unit_price
     *
     * @return \AmazonBusinessApi\Model\ProductSearchV20200826\Money
     */
    public function getUnitPrice()
    {
        return $this->container['unit_price'];
    }

    /**
     * Sets unit_price
     *
     * @param \AmazonBusinessApi\Model\ProductSearchV20200826\Money $unit_price unit_price
     *
     * @return self
     */
    public function setUnitPrice($unit_price)
    {
        $this->container['unit_price'] = $unit_price;

        return $this;
    }
    /**
     * Gets min_quantity
     *
     * @return int|null
     */
    public function getMinQuantity()
    {
        return $this->container['min_quantity'];
    }

    /**
     * Sets min_quantity
     *
     * @param int|null $min_quantity [DEPRECATED: please use unitPrice and quantityDisplay instead] The minimum quantity of items that the customer needs to buy to reach this price tier.
     *
     * @return self
     */
    public function setMinQuantity($min_quantity)
    {
        $this->container['min_quantity'] = $min_quantity;

        return $this;
    }
    /**
     * Gets price
     *
     * @return \AmazonBusinessApi\Model\ProductSearchV20200826\Price|null
     */
    public function getPrice()
    {
        return $this->container['price'];
    }

    /**
     * Sets price
     *
     * @param \AmazonBusinessApi\Model\ProductSearchV20200826\Price|null $price price
     *
     * @return self
     */
    public function setPrice($price)
    {
        $this->container['price'] = $price;

        return $this;
    }
    /**
     * Gets saving_message
     *
     * @return string|null
     */
    public function getSavingMessage()
    {
        return $this->container['saving_message'];
    }

    /**
     * Sets saving_message
     *
     * @param string|null $saving_message [DEPRECATED: please use unitPrice and quantityDisplay instead] The savings message of the tier. Exists only when the tier's price is lower than the basis price of the current buying option.
     *
     * @return self
     */
    public function setSavingMessage($saving_message)
    {
        $this->container['saving_message'] = $saving_message;

        return $this;
    }
    /**
     * Gets tax_exclusive_price
     *
     * @return \AmazonBusinessApi\Model\ProductSearchV20200826\TaxExclusivePrice|null
     */
    public function getTaxExclusivePrice()
    {
        return $this->container['tax_exclusive_price'];
    }

    /**
     * Sets tax_exclusive_price
     *
     * @param \AmazonBusinessApi\Model\ProductSearchV20200826\TaxExclusivePrice|null $tax_exclusive_price tax_exclusive_price
     *
     * @return self
     */
    public function setTaxExclusivePrice($tax_exclusive_price)
    {
        $this->container['tax_exclusive_price'] = $tax_exclusive_price;

        return $this;
    }
}


