<?php
/**
 * OffersResult
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  AmazonBusinessApi
 */

/**
 * Amazon Business API for Products
 *
 * An API for getting data about products available to Amazon Business customers. This includes information such as the product title, the merchant selling the product, and the current price.
 *
 * The version of the OpenAPI document: 2020-08-26
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace AmazonBusinessApi\Model\ProductSearchV20200826;
use AmazonBusinessApi\Model\BaseModel;
use AmazonBusinessApi\Model\ModelInterface;
use AmazonBusinessApi\ObjectSerializer;
use ArrayAccess;

/**
 * OffersResult Class Doc Comment
 *
 * @category Class
 * @description The data that describes the results of your offer query
 * @package  AmazonBusinessApi
 * @group 
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class OffersResult extends BaseModel implements ModelInterface, ArrayAccess, \JsonSerializable, \IteratorAggregate
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'OffersResult';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'offer_count' => 'int',
        'number_of_pages' => 'int',
        'featured_offer' => '\AmazonBusinessApi\Model\ProductSearchV20200826\Offer',
        'offers' => '\AmazonBusinessApi\Model\ProductSearchV20200826\Offer[]',
        'filter_groups' => '\AmazonBusinessApi\Model\ProductSearchV20200826\OfferFilterGroup[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'offer_count' => null,
        'number_of_pages' => null,
        'featured_offer' => null,
        'offers' => null,
        'filter_groups' => null
    ];



    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'headers' => 'headers',
        'offer_count' => 'offerCount',
        'number_of_pages' => 'numberOfPages',
        'featured_offer' => 'featuredOffer',
        'offers' => 'offers',
        'filter_groups' => 'filterGroups'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'headers' => 'setHeaders',
        'offer_count' => 'setOfferCount',
        'number_of_pages' => 'setNumberOfPages',
        'featured_offer' => 'setFeaturedOffer',
        'offers' => 'setOffers',
        'filter_groups' => 'setFilterGroups'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'headers' => 'getHeaders',
        'offer_count' => 'getOfferCount',
        'number_of_pages' => 'getNumberOfPages',
        'featured_offer' => 'getFeaturedOffer',
        'offers' => 'getOffers',
        'filter_groups' => 'getFilterGroups'
    ];


    
    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['offer_count'] = $data['offer_count'] ?? null;
        $this->container['number_of_pages'] = $data['number_of_pages'] ?? null;
        $this->container['featured_offer'] = $data['featured_offer'] ?? null;
        $this->container['offers'] = $data['offers'] ?? null;
        $this->container['filter_groups'] = $data['filter_groups'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];
        return $invalidProperties;
    }

    /**
     * Gets API response headers
     *
     * @return array[string]
     */
    public function getHeaders()
    {
        return $this->container['headers'];
    }

    /**
     * Sets API response headers (only relevant to response models)
     *
     * @param array[string => string] $headers Associative array of response headers.
     *
     * @return self
     */
    public function setHeaders($headers)
    {
        $this->container['headers'] = $headers;
        return $this;
    }

    /**
     * Gets offer_count
     *
     * @return int|null
     */
    public function getOfferCount()
    {
        return $this->container['offer_count'];
    }

    /**
     * Sets offer_count
     *
     * @param int|null $offer_count The number of offers for the ASIN, after filters are applied.
     *
     * @return self
     */
    public function setOfferCount($offer_count)
    {
        $this->container['offer_count'] = $offer_count;

        return $this;
    }
    /**
     * Gets number_of_pages
     *
     * @return int|null
     */
    public function getNumberOfPages()
    {
        return $this->container['number_of_pages'];
    }

    /**
     * Sets number_of_pages
     *
     * @param int|null $number_of_pages Number of pages of results.
     *
     * @return self
     */
    public function setNumberOfPages($number_of_pages)
    {
        $this->container['number_of_pages'] = $number_of_pages;

        return $this;
    }
    /**
     * Gets featured_offer
     *
     * @return \AmazonBusinessApi\Model\ProductSearchV20200826\Offer|null
     */
    public function getFeaturedOffer()
    {
        return $this->container['featured_offer'];
    }

    /**
     * Sets featured_offer
     *
     * @param \AmazonBusinessApi\Model\ProductSearchV20200826\Offer|null $featured_offer featured_offer
     *
     * @return self
     */
    public function setFeaturedOffer($featured_offer)
    {
        $this->container['featured_offer'] = $featured_offer;

        return $this;
    }
    /**
     * Gets offers
     *
     * @return \AmazonBusinessApi\Model\ProductSearchV20200826\Offer[]|null
     */
    public function getOffers()
    {
        return $this->container['offers'];
    }

    /**
     * Sets offers
     *
     * @param \AmazonBusinessApi\Model\ProductSearchV20200826\Offer[]|null $offers List of offers in page.
     *
     * @return self
     */
    public function setOffers($offers)
    {
        $this->container['offers'] = $offers;

        return $this;
    }
    /**
     * Gets filter_groups
     *
     * @return \AmazonBusinessApi\Model\ProductSearchV20200826\OfferFilterGroup[]|null
     */
    public function getFilterGroups()
    {
        return $this->container['filter_groups'];
    }

    /**
     * Sets filter_groups
     *
     * @param \AmazonBusinessApi\Model\ProductSearchV20200826\OfferFilterGroup[]|null $filter_groups List of filter groups
     *
     * @return self
     */
    public function setFilterGroups($filter_groups)
    {
        $this->container['filter_groups'] = $filter_groups;

        return $this;
    }
}


