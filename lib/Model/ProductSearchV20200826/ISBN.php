<?php
/**
 * ISBN
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  AmazonBusinessApi
 */

/**
 * Amazon Business API for Products
 *
 * An API for getting data about products available to Amazon Business customers. This includes information such as the product title, the merchant selling the product, and the current price.
 *
 * The version of the OpenAPI document: 2020-08-26
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace AmazonBusinessApi\Model\ProductSearchV20200826;
use AmazonBusinessApi\Model\BaseModel;
use \AmazonBusinessApi\Model\ModelInterface;
use \AmazonBusinessApi\ObjectSerializer;
use \ArrayAccess;

/**
 * ISBN Class Doc Comment
 *
 * @category Class
 * @description International Standard Book Number associated with the product
 * @package  AmazonBusinessApi
 * @group 
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class ISBN extends BaseModel implements ModelInterface, ArrayAccess, \JsonSerializable, \IteratorAggregate
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'ISBN';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'isbn10' => 'string',
        'isbn13' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'isbn10' => null,
        'isbn13' => null
    ];



    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'isbn10' => 'isbn10',
        'isbn13' => 'isbn13'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
                'isbn10' => 'setIsbn10',
        'isbn13' => 'setIsbn13'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'isbn10' => 'getIsbn10',
        'isbn13' => 'getIsbn13'
    ];


    
    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['isbn10'] = $data['isbn10'] ?? null;
        $this->container['isbn13'] = $data['isbn13'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];
        return $invalidProperties;
    }


    /**
     * Gets isbn10
     *
     * @return string|null
     */
    public function getIsbn10()
    {
        return $this->container['isbn10'];
    }

    /**
     * Sets isbn10
     *
     * @param string|null $isbn10 Unique 10-digit ISBN associated with the product
     *
     * @return self
     */
    public function setIsbn10($isbn10)
    {
        $this->container['isbn10'] = $isbn10;

        return $this;
    }
    /**
     * Gets isbn13
     *
     * @return string|null
     */
    public function getIsbn13()
    {
        return $this->container['isbn13'];
    }

    /**
     * Sets isbn13
     *
     * @param string|null $isbn13 Unique 13-digit long ISBN associated with the product
     *
     * @return self
     */
    public function setIsbn13($isbn13)
    {
        $this->container['isbn13'] = $isbn13;

        return $this;
    }
}


